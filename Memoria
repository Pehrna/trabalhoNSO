package br.unb.nso.TrabalhoNSO;


public class Memoria {

	private static int MEMCPU = 64;
	private static int MEMUSER	 = 64;	
	
	private int[] memoriaCPU = new int[MEMCPU];
	private int[] memoriausuario = new int[MEMUSER];
	
	public Memoria(){
			for (int i = 0; i < MEMCPU; i++) {
				memoriaCPU[i] = 0;
			}
			for (int i = 0; i < MEMUSER; i++) {
				memoriausuario[i] = 0;
			}

	}

	public int memoriaLivre(int prioridade, int blocosMemoria) {
		if (prioridade == 0){
			blocosContiguosCpu(memoriaCPU, blocosMemoria);
		} else {
			blocosContiguosUsuario(memoriaUsuario, blocosMemoria);
		}
		return 0;
	}

	//	private int blocosContiguosCpu(int[] memoriaTipo, int blocosNecessarios ) {
	//		int estado = 0;
	//		int contaBlocos = 0;
	//
	//		while (contaBlocos < blocosNecessarios){
	//
	//			for (int i = 0; i < MEMCPU; i++){
	//
	//				if (memoriaTipo[i] == estado){
	//					contaBlocos++;
	//
	//				}
	//			}
	//		}
	//		return contaBlocos;
}
